// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NavigationPlatform.RewardService.Worker.Persistence;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace NavigationPlatform.RewardService.Worker.Migrations
{
    [DbContext(typeof(RewardDbContext))]
    partial class RewardDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("NavigationPlatform.RewardService.Worker.Entities.DailyGoalAchievement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("AchievementDate")
                        .HasColumnType("date")
                        .HasColumnName("achievement_date");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<decimal>("TotalDistanceKm")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("total_distance_km");

                    b.Property<Guid>("TriggeringJourneyId")
                        .HasColumnType("uuid")
                        .HasColumnName("triggering_journey_id");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("AchievementDate")
                        .HasDatabaseName("idx_daily_goal_achievements_date");

                    b.HasIndex("UserId")
                        .HasDatabaseName("idx_daily_goal_achievements_user_id");

                    b.HasIndex("UserId", "AchievementDate")
                        .IsUnique()
                        .HasDatabaseName("idx_user_achievement_date_unique");

                    b.ToTable("daily_goal_achievements", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
